#ifndef H_CORE_DOCUMENTS
#define H_CORE_DOCUMENTS

#include <iostream>
#include <regex>

#include <tegia/core/cast.h>

/*

================================================

КОДЫ ВИДОВ ДОКУМЕНТОВ, УДОСТОВЕРЯЮЩИХ ЛИЧНОСТЬ НАЛОГОПЛАТЕЛЬЩИКА
 
01 Паспорт гражданина СССР
03 Свидетельство о рождении
05 Справка об освобождении из места лишения свободы
07 Военный билет
08 Временное удостоверение, выданное взамен военного билета
10 Паспорт иностранного гражданина
11 Свидетельство о рассмотрении ходатайства о признании лица беженцем на территории Российской Федерации по существу
12 Вид на жительство в Российской Федерации
13 Удостоверение беженца
14 Временное удостоверение личности гражданина Российской Федерации
15 Разрешение на временное проживание в Российской Федерации
18 Свидетельство о предоставлении временного убежища на территории Российской Федерации
21 Паспорт гражданина Российской Федерации
23 Свидетельство о рождении, выданное уполномоченным органом иностранного государства
24 Удостоверение личности военнослужащего Российской Федерации
26 Паспорт моряка
27 Военный билет офицера запаса
60 Документы, подтверждающие факт регистрации по месту жительства
61 Свидетельство о регистрации по месту жительства
62 Вид на жительство иностранного гражданина

================================================

*/


namespace tegia {
namespace documents {


inline std::string format_inn(const std::string &inn)
{
	if(inn.length() == 12)
	{
		return inn;
	}
	
	std::string _inn = "0" + inn;
	return _inn;
};

inline std::string format_inn(const long long int &inn)
{
	std::string _inn = std::to_string(inn);
	if(_inn.length() == 12)
	{
		return _inn;
	}
	
	_inn = "0" + _inn;
	return _inn;
};


///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// ПАСПОРТ ГРАЖДАНИНА РОССИЙСКОЙ ФЕДЕРАЦИИ
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////

const int XX_XX_YYYYYY	= 1;
const int XXXX_YYYYYY	= 2;


class s_rus_passport
{
	private:
		std::string region = "";	// соответствуют коду ОКАТО региона, в котором выдан паспорт
		std::string series = "";	// соответствуют последним двум цифрам года выпуска бланка паспорта (допускается отклонение на 1-3 года)
		std::string number = "";	// номер паспорта
		bool is_valid = false;		// признак действительности паспорта

		bool _parse(const std::u32string &number);

	public:
		std::string format(const int &format);

		inline bool parse(const std::string &number)
		{
			std::u32string _number = core::cast<std::u32string>(number);
			return _parse(_number);
		};

		inline bool parse(long long int number)
		{
			std::u32string _number = core::cast<std::u32string>(number);
			return _parse(_number);
		};
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// СНИЛС
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////

class snils_t
{
	private:
		std::string number = "";  // 11 цифр
		bool is_valid = false;

	public:

	bool parse(const std::string &_number);
	std::string format();
};




}  // END namespace documents
}  // END namespace tegia



#endif